// <auto-generated />
using MangoSchoolApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MangoSchoolApi.Migrations
{
    [DbContext(typeof(MangoDataContext))]
    [Migration("20230910232600_Refactor2")]
    partial class Refactor2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MangoSchoolApi.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Arith")
                        .HasColumnType("int")
                        .HasColumnName("Arith");

                    b.Property<int>("Ave")
                        .HasColumnType("int")
                        .HasColumnName("Ave");

                    b.Property<int>("HE")
                        .HasColumnType("int")
                        .HasColumnName("HE");

                    b.Property<short>("IsActive")
                        .HasColumnType("smallint")
                        .HasColumnName("IsActive");

                    b.Property<int>("Kus")
                        .HasColumnType("int")
                        .HasColumnName("Kus");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("Semester");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("UserName");

                    b.Property<int>("Pos")
                        .HasColumnType("int")
                        .HasColumnName("Pos");

                    b.Property<int>("Read")
                        .HasColumnType("int")
                        .HasColumnName("Read");

                    b.Property<int>("SA")
                        .HasColumnType("int")
                        .HasColumnName("SA");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("Total");

                    b.Property<int>("Writ")
                        .HasColumnType("int")
                        .HasColumnName("Writ");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("MangoSchoolApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Password");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("UserEmail");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("UserName");

                    b.Property<short>("isActive")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("IsActive");

                    b.Property<short>("isAdmin")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("IsAdmin");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
